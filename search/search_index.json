{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Teams Core Documention How to use documentation Through this applications code are symbolic linked \"README.md\" files that point back to MarkDown files in the /docs folder. This is that that documention is easy to find in context while browsing in a code reposiotry system like github. The Actual documentation is all located in the /docs folder and is build as a static website on the branch gh-pages . Update Documentaion Change or add a md file in the docs directory and add it to the /.mkdocs.yml \"nav\" section. If you would like this file to also appear in a specific folder of the code you can sym link it like so. Powershell 7.1+ Bash New-Item -ItemType SymbolicLink -Path \"./src/code/directory/README.md\" -Target \"./docs/myInfoName.md\" ln -s ./docs/myInfoName.md ./docs/myInfoName.md Note: powershell less then 7.1 create static symbolic links instead of reltive ones. Please use the correct version of powershell . Run Documentation Site Locally Install mkdocs Install Material theme Serve Locally: mkdocs serve Publish Documention to github mkdocs gh-deploy This command will create/update the documentation branch gh-pages with the static output. Once pushed to github the pages site will automaticly update. Why is the documention first? It's annoying Akin to learning where the brakes on a car are, this is for project integrity. You will not be the only person writing code for this project. Please leave a lagacy of purposeful documention. Getting Started This is a TypeScript based React App w/Material-Ui at it's core. yarn start Runs the app in the development mode.\\ Open http://localhost:3000 to view it in the browser. The page will reload if you make edits.\\ You will also see any lint errors in the console. yarn test Launches the test runner in the interactive watch mode.\\ See the section about running tests for more information. yarn run build Builds the app for production to the build folder.\\ It correctly bundles React in production mode and optimizes the build for the best performance. The build is minified and the filenames include the hashes.\\ Your app is ready to be deployed! See the section about deployment for more information. yarn run eject Note: this is a one-way operation. Once you eject , you can\u2019t go back! If you aren\u2019t satisfied with the build tool and configuration choices, you can eject at any time. This command will remove the single build dependency from your project. Instead, it will copy all the configuration files and the transitive dependencies (webpack, Babel, ESLint, etc) right into your project so you have full control over them. All of the commands except eject will still work, but they will point to the copied scripts so you can tweak them. At this point you\u2019re on your own. You don\u2019t have to ever use eject . The curated feature set is suitable for small and middle deployments, and you shouldn\u2019t feel obligated to use this feature. However we understand that this tool wouldn\u2019t be useful if you couldn\u2019t customize it when you are ready for it. Learn More You can learn more in the Create React App documentation . To learn React, check out the React documentation .","title":"Home"},{"location":"#teams-core-documention","text":"","title":"Teams Core Documention"},{"location":"#how-to-use-documentation","text":"Through this applications code are symbolic linked \"README.md\" files that point back to MarkDown files in the /docs folder. This is that that documention is easy to find in context while browsing in a code reposiotry system like github. The Actual documentation is all located in the /docs folder and is build as a static website on the branch gh-pages .","title":"How to use documentation"},{"location":"#update-documentaion","text":"Change or add a md file in the docs directory and add it to the /.mkdocs.yml \"nav\" section. If you would like this file to also appear in a specific folder of the code you can sym link it like so. Powershell 7.1+ Bash New-Item -ItemType SymbolicLink -Path \"./src/code/directory/README.md\" -Target \"./docs/myInfoName.md\" ln -s ./docs/myInfoName.md ./docs/myInfoName.md Note: powershell less then 7.1 create static symbolic links instead of reltive ones. Please use the correct version of powershell .","title":"Update Documentaion"},{"location":"#run-documentation-site-locally","text":"Install mkdocs Install Material theme Serve Locally: mkdocs serve","title":"Run Documentation Site Locally"},{"location":"#publish-documention-to-github","text":"mkdocs gh-deploy This command will create/update the documentation branch gh-pages with the static output. Once pushed to github the pages site will automaticly update.","title":"Publish Documention to github"},{"location":"#why-is-the-documention-first-its-annoying","text":"Akin to learning where the brakes on a car are, this is for project integrity. You will not be the only person writing code for this project. Please leave a lagacy of purposeful documention.","title":"Why is the documention first? It's annoying"},{"location":"#getting-started","text":"This is a TypeScript based React App w/Material-Ui at it's core.","title":"Getting Started"},{"location":"#yarn-start","text":"Runs the app in the development mode.\\ Open http://localhost:3000 to view it in the browser. The page will reload if you make edits.\\ You will also see any lint errors in the console.","title":"yarn start"},{"location":"#yarn-test","text":"Launches the test runner in the interactive watch mode.\\ See the section about running tests for more information.","title":"yarn test"},{"location":"#yarn-run-build","text":"Builds the app for production to the build folder.\\ It correctly bundles React in production mode and optimizes the build for the best performance. The build is minified and the filenames include the hashes.\\ Your app is ready to be deployed! See the section about deployment for more information.","title":"yarn run build"},{"location":"#yarn-run-eject","text":"Note: this is a one-way operation. Once you eject , you can\u2019t go back! If you aren\u2019t satisfied with the build tool and configuration choices, you can eject at any time. This command will remove the single build dependency from your project. Instead, it will copy all the configuration files and the transitive dependencies (webpack, Babel, ESLint, etc) right into your project so you have full control over them. All of the commands except eject will still work, but they will point to the copied scripts so you can tweak them. At this point you\u2019re on your own. You don\u2019t have to ever use eject . The curated feature set is suitable for small and middle deployments, and you shouldn\u2019t feel obligated to use this feature. However we understand that this tool wouldn\u2019t be useful if you couldn\u2019t customize it when you are ready for it.","title":"yarn run eject"},{"location":"#learn-more","text":"You can learn more in the Create React App documentation . To learn React, check out the React documentation .","title":"Learn More"}]}